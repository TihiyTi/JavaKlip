package com.ti.desktop;

import com.fazecast.jSerialComm.*;

import java.util.concurrent.*;

public class SerialCommExample3 {
    private static ScheduledExecutorService executor;

    public static void main(String[] args) {
        SerialPort comPort = SerialPort.getCommPort("COM7");
        comPort.setBaudRate(115200);
        comPort.setNumDataBits(8);
        comPort.setNumStopBits(SerialPort.ONE_STOP_BIT);
        comPort.setParity(SerialPort.NO_PARITY);

        if (!comPort.openPort()) {
            System.out.println("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç.");
            return;
        }

        System.out.println("–û—Ç–∫—Ä—ã—Ç –ø–æ—Ä—Ç: " + comPort.getSystemPortName());

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏–π
        comPort.addDataListener(new SerialPortDataListener() {
            @Override
            public int getListeningEvents() {
                return SerialPort.LISTENING_EVENT_DATA_RECEIVED;
            }

            @Override
            public void serialEvent(SerialPortEvent event) {
                byte[] newData = event.getReceivedData();
                System.out.println("üì• –ü–æ–ª—É—á–µ–Ω–æ " + newData.length + " –±–∞–π—Ç: " + new String(newData));
            }
        });

        // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
        simulateByteByByteTransmission(comPort);

        // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        System.out.println("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...");
        try {
            System.in.read();
        } catch (Exception ignored) {}

        // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Ç–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        if (executor != null) {
            executor.shutdown();  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞—á–∏
            try {
                if (!executor.awaitTermination(2, TimeUnit.SECONDS)) {
                    executor.shutdownNow(); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
                }
            } catch (InterruptedException e) {
                executor.shutdownNow();
            }
        }

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç
        comPort.closePort();
        System.out.println("–ü–æ—Ä—Ç –∑–∞–∫—Ä—ã—Ç.");
    }

    private static void simulateByteByByteTransmission(SerialPort comPort) {
        executor = Executors.newSingleThreadScheduledExecutor();
        executor.scheduleAtFixedRate(() -> {
            if (!comPort.isOpen()) return;

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É "HELLO"
            byte[] data = "HELLO".getBytes();
            comPort.writeBytes(data, data.length);
            System.out.println("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: " + new String(data));
        }, 0, 500, TimeUnit.MILLISECONDS);
    }
}

